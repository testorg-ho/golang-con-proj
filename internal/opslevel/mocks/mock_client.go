// Code generated by MockGen. DO NOT EDIT.
// Source: internal/opslevel/client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	opslevel "golang-console-project/internal/opslevel"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOpsLevelClient is a mock of OpsLevelClient interface.
type MockOpsLevelClient struct {
	ctrl     *gomock.Controller
	recorder *MockOpsLevelClientMockRecorder
}

// MockOpsLevelClientMockRecorder is the mock recorder for MockOpsLevelClient.
type MockOpsLevelClientMockRecorder struct {
	mock *MockOpsLevelClient
}

// NewMockOpsLevelClient creates a new mock instance.
func NewMockOpsLevelClient(ctrl *gomock.Controller) *MockOpsLevelClient {
	mock := &MockOpsLevelClient{ctrl: ctrl}
	mock.recorder = &MockOpsLevelClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpsLevelClient) EXPECT() *MockOpsLevelClientMockRecorder {
	return m.recorder
}

// GetServices mocks base method.
func (m *MockOpsLevelClient) GetServices() ([]opslevel.Service, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServices")
	ret0, _ := ret[0].([]opslevel.Service)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServices indicates an expected call of GetServices.
func (mr *MockOpsLevelClientMockRecorder) GetServices() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServices", reflect.TypeOf((*MockOpsLevelClient)(nil).GetServices))
}
